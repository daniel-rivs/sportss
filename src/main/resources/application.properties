
# Ejemplo de URI para este proyecto: http://localhost:8080/api/deportivos/obtenerDeportivos
# No colocar comentarios delante de las configuraciones
spring.application.name=SportConnect
#server.port=8484
# Configuración de la base de datos PostgreSQL
spring.datasource.url=jdbc:postgresql://aws-0-us-east-1.pooler.supabase.com:6543/postgres
spring.datasource.username=postgres.hzimbtewfvfnvqgtihhl
spring.datasource.password=sport23@web_
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=public

# Mostrar las consultas SQL en la consola
spring.jpa.show-sql=true

# Configuración del dialecto de PostgreSQL (opcional si usas Spring Data JPA)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true #Activamos para checar la consulta

# Configuración de Hibernate
# Este parámetro crea automáticamente las tablas a partir de las entidades
spring.jpa.hibernate.ddl-auto=none

# Tamaño del pool de conexiones (opcional)
spring.sql.init.mode=always
spring.datasource.hikari.maximum-pool-size=10

#Arregla el problema de implementación entre JPA y SpringBoot con CamelCase y snake_case
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
#logging.level.org.hibernate.SQL=debug

#Habilitación de SpringDoc
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/documentacion/swagger-ui.html
#Aquí se definió para el controlador deportivos, pero se pueden indicar los demás controladores
springdoc.paths-to-match=/api/**
